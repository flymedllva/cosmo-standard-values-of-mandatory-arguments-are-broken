package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"example/service1/graph/model"
)

// M is the resolver for the m field.
func (r *mutationResolver) M(ctx context.Context) (*int, error) {
	return nil, nil
}

// Test is the resolver for the test field.
func (r *queryResolver) Test(ctx context.Context, input model.TestInput) (*model.TestResult, error) {
	var tr model.TestResult
	if input.Filter != nil {
		if input.Filter.A != nil {
			tr.A = input.Filter.A
		}
		tr.B = input.Filter.B
	}
	return &tr, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
