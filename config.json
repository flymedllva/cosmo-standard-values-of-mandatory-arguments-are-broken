{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Mutation","fieldNames":["m"]},{"typeName":"Query","fieldNames":["test"]}],"childNodes":[{"typeName":"TestResult","fieldNames":["a","b"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:8081/query"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:8081/query"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"type Mutation {\n  m: Int\n}\n\ntype Query {\n  test(input: TestInput!): TestResult!\n}\n\ninput TestFilterInput {\n  a: Int\n  b: Int! = 123\n}\n\ninput TestInput {\n  filter: TestFilterInput\n}\n\ntype TestResult {\n  a: Int\n  b: Int!\n}\n\nextend schema @link(\n  url: \"https://specs.apollo.dev/federation/v2.3\",\n  import: [\"@external\", \"@requires\", \"@provides\", \"@key\", \"@shareable\", \"@inaccessible\", \"@tag\", \"@override\", \"@composeDirective\", \"@extends\"]\n)"},"upstreamSchema":{"key":"fa4e4ce290dce884b96719880d4db389b9250c6c"}},"requestTimeoutSeconds":"10","id":"0"}],"fieldConfigurations":[{"typeName":"Query","fieldName":"test","argumentsConfiguration":[{"name":"input","sourceType":"FIELD_ARGUMENT"}]}],"graphqlSchema":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nscalar openfed__Scope\n\ntype Mutation {\n  m: Int\n}\n\ntype Query {\n  test(input: TestInput!): TestResult!\n}\n\ninput TestFilterInput {\n  a: Int\n  b: Int! = 123\n}\n\ninput TestInput {\n  filter: TestFilterInput\n}\n\ntype TestResult {\n  a: Int\n  b: Int!\n}","stringStorage":{"fa4e4ce290dce884b96719880d4db389b9250c6c":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Mutation {\n  m: Int\n}\n\ntype Query {\n  test(input: TestInput!): TestResult!\n}\n\ninput TestFilterInput {\n  a: Int\n  b: Int! = 123\n}\n\ninput TestInput {\n  filter: TestFilterInput\n}\n\ntype TestResult {\n  a: Int\n  b: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope"}},"version":"eb406c52b3548838a84b74eddb6a81e56119e76d","subgraphs":[{"id":"0","name":"service1","routingUrl":"http://localhost:8081/query"}]}